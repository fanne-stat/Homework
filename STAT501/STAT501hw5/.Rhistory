d=read.delim("http://dnett.github.io/S510/PlantDensity.txt")
names(d)=c("x","y")
head(d)
y=d$y
x=(d$x-mean(d$x))/10
n=nrow(d)
x1=matrix(1,nrow=n,ncol=1)
x2=cbind(x1,x)
x3=cbind(x2,x^2)
x4=cbind(x3,x^3)
x5=matrix(model.matrix(~0+factor(x)),nrow=n)
I=diag(rep(1,n))
library(MASS)
proj=function(x){
x%*%ginv(t(x)%*%x)%*%t(x)
}
p1=proj(x1)
p2=proj(x2)
p3=proj(x3)
p4=proj(x4)
p5=proj(x5)
x5
(p5 - p4)%*%x5
fractions((p5 - p4)%*%x5)
fractions((p2 - p1)%*%x5)
fractions((p3 - p2)%*%x5)
fractions((p4 - p1)%*%x5)
fractions((p4 - p3)%*%x5)
fractions((p5 - p4)%*%x5)
x5
w1 <- matrix(c(1,0,0,1,0,1,0,1,0,0,1,1),ncol = 3)
w1
time=factor(rep(c(3,6),each=5))
temp=factor(rep(c(20,30,20,30),c(2,3,4,1)))
a=time
b=temp
y=c(3,5,11,13,15,5,6,6,7,16)
d=data.frame(time,temp,y)
d
x1=matrix(1,nrow=nrow(d),ncol=1)
x1
x2=cbind(x1,model.matrix(~0+a))
x2
x3=cbind(x2,model.matrix(~0+b))
x3
x4=model.matrix(~0+b:a)
x4
library(MASS)
proj=function(x){
x%*%ginv(t(x)%*%x)%*%t(x)
}
p1=proj(x1)
p2=proj(x2)
p3=proj(x3)
p4=proj(x4)
I=diag(rep(1,10))
preduced <- proj(w1)
ssereduced <- t(y) %*% (I - preduced) %*% y
x4
w1 <- x4 %*% w1
w1
preduced <- proj(w1)
ssereduced <- t(y) %*% (I - preduced) %*% y
ssereduced
ssefull <- t(y) %*% (I - p4) %*% y
ssefull
F <- (ssereduced - ssefull)/(ssefull/6)
F
w1 <- x4 %*% matrix(c(1,0,0,0,1,0,0,0,1,1,1,-1))
w1 <- x4 %*% matrix(c(1,0,0,0,1,0,0,0,1,1,1,-1),byrow= T, ncol = 3)
w1
preduced <- proj(w1)
ssereduced <- t(y) %*% (I - preduced) %*% y
ssereduced
F <- (ssereduced - ssefull)/(ssefull/6)
F
## Problem 3
library(tidyr)
library(discretization)
install.packages("discretization")
library(GGally)
#Create parallel plot with colour by the group
install.packages("GGally")
library(GGally)
setwd("C:/Users/fanne/Dropbox/Homework/STAT501/STAT501hw5")
load('.RData')
max.lambda
testnormality(X = colleges.tranformed[colleges.tranformed$School_Type == "Lib Arts", -1])
testnormality(X = colleges.tranformed[colleges.tranformed$School_Type == "Univ", -1])
p_vals
p.adjust(p_vals[order(p_vals)], method = "fdr")
summary(fit.lm)
library(sas7bdat)
psych <- read.sas7bdat("psych.sas7bdat")
#a) Fit the linear model
library(car)
psych$PROG <-as.factor(psych$PROG)
levels(psych$PROG)
fit.lm <- lm(cbind(LOCUS_OF_CONTROL,SELF_CONCEPT,MOTIVATION) ~ READ + WRITE + SCIENCE + PROG, data = psych)
summary(fit.lm)
fit.manova <- Manova(fit.lm)
summary(fit.manova)
#b) Refit the model without test scores of writing and science.
fit.lm1 <- lm(cbind(LOCUS_OF_CONTROL,SELF_CONCEPT,MOTIVATION)~ READ + PROG, data = psych)
summary(fit.lm1)
fit.manova1 <- Manova(fit.lm1)
summary(fit.manova1)
#c)
anova(fit.lm, fit.lm1, test = "Wilks")
anova(fit.lm, fit.lm1, test = "Wilks")
#d)Test simultaneously
p_values <- c(0,0)
fit.lm.P12 <- lm(cbind(LOCUS_OF_CONTROL,SELF_CONCEPT,MOTIVATION) ~ READ + WRITE + SCIENCE + PROG, data = psych[psych$PROG %in% c(1,2),])
fit.lm.P12_reduced <- lm(cbind(LOCUS_OF_CONTROL,SELF_CONCEPT,MOTIVATION) ~ READ + WRITE + SCIENCE, data = psych[psych$PROG %in% c(1,2),])
test_P12 <- anova(fit.lm.P12, fit.lm.P12_reduced, test = "Wilks")
p_vals[1] <- test_P12$`Pr(>F)`[2]
fit.lm.P23 <- lm(cbind(LOCUS_OF_CONTROL,SELF_CONCEPT,MOTIVATION) ~ READ + WRITE + SCIENCE + PROG, data = psych[psych$PROG %in% c(2,3),])
fit.lm.P23_reduced <- lm(cbind(LOCUS_OF_CONTROL,SELF_CONCEPT,MOTIVATION) ~ READ + WRITE + SCIENCE, data = psych[psych$PROG %in% c(2,3),])
test_P23 <- anova(fit.lm.P23, fit.lm.P23_reduced, test = "Wilks")
p_values[2] <- test_P23$`Pr(>F)`[2]
bon_adj<-p.adjust(p_vals,method="bonferroni")
bon_adj
fdr_adj<-p.adjust(p_vals,method="fdr")
fdr_adj
bon_adj<-p.adjust(p_values,method="bonferroni")
bon_adj
fdr_adj<-p.adjust(p_values,method="fdr")
fdr_adj
#e)
C <- matrix(c(0,0,1,0,0,0), nrow = 1)
M <- matrix(c(1,-1,0), ncol = 1)
newfit <- linearHypothesis(fit.lm, hypothesis.matrix = C, P = M)
print(newfit)
#f)
C1 <- matrix(c(0,0,1,0,0,0,0,0,0,1,0,0), nrow = 2, byrow = T)
M <- matrix(c(1,-1,0), ncol = 1)
newfit1 <- linearHypothesis(fit.lm, hypothesis.matrix = C1, P = M)
print(newfit1)
fit.lm2<- lm(cbind(LOCUS_OF_CONTROL,SELF_CONCEPT,MOTIVATION)~ .^2, data = psych)
summary(fit.lm2)
fit.manova12 <- Manova(fit.lm2)
summary(fit.manova12)
