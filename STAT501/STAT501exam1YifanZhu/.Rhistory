dim(P1Mss)
?var
apply(P1Mss, dim = 2, var)
apply(P1Mss, dim = 2, FUN = var)
apply(P1Mss, MARGIN = 2, FUN = var)
apply(P1Mss, MARGIN = 1, FUN = var)
apply(P2Mss, MARGIN = 1, FUN = var)
apply(P1Mss, MARGIN = 1, FUN = var)/apply(P1Mss, MARGIN = 1, FUN = var)
apply(P1Mss, MARGIN = 1, FUN = var)/apply(P2Mss, MARGIN = 1, FUN = var)
P1Mss <- NULL
P2Mss <- NULL
Ms <- c(100*1:10, 2000)
N <- 2000
P1Ms <- rep(0, N)
P2Ms <- P1Ms
for (M in Ms){
xs <- matrix(rnorm(M*N), ncol = N)
ys <- matrix(rnorm(M*N), ncol = N)
for (n in 1:N){
P1Ms[n] <- P1M(xs[,n],ys[,n])
P2Ms[n] <- P2M(xs[,n],ys[,n])
}
P1Mss <- cbind(P1Mss, P1Ms)
P2Mss <- cbind(P2Mss, P2Ms)
}
ep1m <- apply(P1Mss, MARGIN = 2, FUN = mean)
ep1m <- apply(P2Mss, MARGIN = 2, FUN = mean)
varp1m <- apply(P1Mss, MARGIN = 2, FUN = var)
varp2m <- apply(P2Mss, MARGIN = 2, FUN = var)
ep1m
ep2m
ep1m <- apply(P1Mss, MARGIN = 2, FUN = mean)
ep2m <- apply(P2Mss, MARGIN = 2, FUN = mean)
ep1m
ep2m
varp1m
varp2m
varp1m/varp2m
library(dplyr)
?filter
?mask
??mask
?maply
library(plyr)
detach(dplyr)
detach("dplyr")
unloadNamespace("dplyr")
unloadNamespace("plyr")
library(plyr)
detach("package:dplyr", TRUE)
detach("package:plyr", TRUE)
detach("package:dplyr", TRUE)
library(dplyr)
detach("package:dplyr", TRUE)
library(plyr)
library(plyr); library(dplyr)
?maply
maply(cbind(1:5, 1:5), rnorm, n = 5)
maply(cbind(1:3, 1:3), rnorm, n = 5)
maply(cbind(1:3, 1:3, 1:3), rnorm, n = 5)
maply(cbind(1:3, 1:3), rnorm, n = 5)
maply(cbind(1:3, 1:3), rnorm, n = 5, mean = 0)
maply(cbind(1:3, 1:3), rnorm, n = 5, mean = 0, sd = 1)
aaply(cbind(1:3, 1:3), .margins = c(1,2), rnorm, n = 5, mean = 0, sd = 1)
aaply(cbind(1:3, 1:3), .margins = c(1,2), rnorm, n = 5, mean = 0)
#1
##(a)
olive <- read.table(file = "http://maitra.public.iastate.edu/stat501/datasets/olive.dat")
head(olive)
#1
##(a)
olive <- read.table(file = "http://maitra.public.iastate.edu/stat501/datasets/olive.dat", header = T)
head(olive)
levels(group.id)
levels(olive$group.id)
levels(as.factor(olive$group.id))
?stars
?radar
??radar
??spider
?stars
stars(mtcars[, 1:7], locations = c(0, 0), radius = FALSE,
key.loc = c(0, 0), main = "Motor Trend Cars", lty = 2)
mtcars[,1:7]
attach(airquality)
Month <- factor(Month, labels = month.abb[5:9])
Mon
Month
month.abb
airquality
pairwise.t.test(Ozone, Month)
setwd("C:/Users/fanne/Dropbox/Homework/STAT501/STAT501exam1YifanZhu")
# read the data
skulls <- read.table("./Egyptian-skulls.dat")
head(skulls)
names(skulls) <- c("max breadth", "basibregmatic height", "basialveolar length", "nasal height", "period")
skulls$period <- as.factor(skulls$period)
skulls$period
head(skulls)
source("radviz2d.R")
radviz2d(skulls, name = "Skulls")
# visualization
library(dprep)
radviz2d(skulls, name = "Skulls")
## parellel coordinates plot
source("parcoordplot.R")
parcoordplot(xx = skulls)
?which
which(names(skull)=="period")
which(names(skulls)=="period")
parcoordplot(xx = skulls[,-ncol(skulls)], cl = skulls$period)
parcoordplot(xx = skulls[,-ncol(skulls)], cl = skulls$period, FUN = mean)
## star plot
source("starcoord.R")
starcoord(data = skulls)
starcoord(data = skulls, class = TRUE)
starcoord(data = skulls, class = TRUE, cex = 0.5)
starcoord(data = skulls, class = TRUE, cex = 1)
radviz2d(skulls, name = "Skulls", cex = 1)
?starcoord
starcoord(data = skulls, class = TRUE, main = "Star coordinate plot for Skulls")
## correlation plot
source("plotcorr.R")
plot.corr(xx = skulls[,skulls$period == 1])
plot.corr(xx = skulls[skulls$period == 1,])
plot.corr(xx = skulls[skulls$period == 1, - ncol(skulls)])
plot.corr(xx = skulls[skulls$period == 2, - ncol(skulls)])
plot.corr(xx = skulls[skulls$period == 3, - ncol(skulls)])
pairs(~., data = skulls[skulls$period == 1, -ncol(skulls)])
pairs(~., data = skulls[skulls$period == 2, -ncol(skulls)])
pairs(~., data = skulls[skulls$period == 3, -ncol(skulls)])
## test for multivariate normality
source("testnormality.R")
testnormality(X = skulls[skulls$period == 1, -ncol(skulls)])
testnormality(X = skulls[skulls$period == 2, -ncol(skulls)])
testnormality(X = skulls[skulls$period == 3, -ncol(skulls)])
library(MVN)
install.packages("MVN")
library(MVN)
mvn(data = skulls[skulls$period == 1, -ncol(skulls)], multivariatePlot = "qq")
mvn(data = skulls[skulls$period == 1, -ncol(skulls)], multivariatePlot = "qq", main = "")
par(main = "")
mvn(data = skulls[skulls$period == 2, -ncol(skulls)], multivariatePlot = "qq")
mvn(data = skulls[skulls$period == 3, -ncol(skulls)], multivariatePlot = "qq")
frame(main = NULL)
## test for homogeneity of dispersions among 3 periods
source("BoxMTest-2.R")
BoxMTest(X = skulls[, -ncol(skulls)], cl = skulls$period)
## star plots and cheroff faces
library(TeachingDemos)
?aggregate
## star plots and cheroff faces
skull_means <- aggregate(. - period ~ period, data = skulls, FUN = mean)
## star plots and cheroff faces
skull_means <- aggregate( -period ~ period, data = skulls, FUN = mean)
## star plots and cheroff faces
skull_means <- aggregate( .-period ~ period, data = skulls, FUN = mean)
## star plots and cheroff faces
skull_means <- aggregate( .~ period, data = skulls, FUN = mean)
skull_means
?stars
stars(skull_means)
library(aplpack)
stars(skull_means)
?stars
stars(skull_means, draw.segments = TRUE)
skull_means
stars(skull_means, draw.segments = TRUE, key.loc = c(4,2))
stars(skull_means[,-1], draw.segments = TRUE, key.loc = c(4,2))
stars(skull_means[,-1], draw.segments = TRUE, key.loc = c(5,2))
stars(skull_means[,-1], draw.segments = TRUE, key.loc = c(4.5,2))
faces(skull_means[,-1])
?stars
stars(skull_means[,-1], labels = skull_means[,1], draw.segments = TRUE, key.loc = c(4.5,2))
skull_means[,1]
stars(skull_means[,-1], labels = c("period 1", "period 2", "period 3"), draw.segments = TRUE, key.loc = c(4.5,2))
?stars
install.packages("ICSNP")
## test for difference in skull sizes between period 1 and period 3
library(ICSNP)
skulls[which(skulls$period == c(1,3)),]
?HotellingsT2
HotellingsT2
HotellingsT2(skulls[which(skulls$period == 1, ], skulls[which(skulls$period == 3, ])
HotellingsT2(skulls[skulls$period == 1, ], skulls[skulls$period == 3, ])
HotellingsT2(skulls[skulls$period == 1, -ncol(skulls)], skulls[skulls$period == 3, -ncol(skulls)])
HotellingsT2(skulls[skulls$period == 1, -ncol(skulls)], skulls[skulls$period == 3, -ncol(skulls)], test = 'f')
BoxMTest(X = skulls[which(skulls$period == c(1,3)), -ncol(skulls)], cl = skulls$period[which(skulls$period == c(1,3))])
## one-way MANOVA of skulls
library(car)
fit.lm <- lm(. ~ period, data = skulls)
fit.lm <- lm(names(skulls)[-ncol(skulls)] ~ period, data = skulls)
names(skulls)[-ncol(skulls)]
cbind(max breadth, basic)
fit.lm <- lm(cbind("max breadth", "basibregmatic height") ~ period, data = skulls)
fit.lm <- lm("basibregmatic height" ~ period, data = skulls)
fit.lm <- lm(basibregmatic height ~ period, data = skulls)
skulls
str(skulls)
fit.lm <- lm('max breadth' ~ period, data = skulls)
as.formula(paste(names(skulls[-ncol(skulls)]), "~", "period"))
paste(names(skulls[-ncol(skulls)]), "~", "period")
?formula
fit.lm <- lm(`max breadth` ~ period, data = skulls)
fit.lm <- lm(cbind(`max breadth`, `basibregmatic heigh`, `basialveolar length`, `nasal height`) ~ period, data = skulls)
fit.lm <- lm(cbind(`max breadth`, `basibregmatic height`, `basialveolar length`, `nasal height`) ~ period, data = skulls)
fit.manova <- Manova(fit.lm)
summary(fit.manova)
?Manova
fit.manova$SSP
fit.manova$SSPE
fit.lm <- lm(cbind(`max breadth`, `basibregmatic height`, `basialveolar length`, `nasal height`) ~ period, data = skulls, contrasts = list(studentgroup = contr.SAS))
fit.lm <- lm(cbind(`max breadth`, `basibregmatic height`, `basialveolar length`, `nasal height`) ~ period, data = skulls, contrasts = list(period = contr.SAS))
fit.manova <- Manova(fit.lm)
summary(fit.manova)
fit.lm$coefficients
fit.lm$effects
fit.lm$fitted.values
fit.manova$df
fit.manova$error.df
## simutanous test: 4 measurements 3 periods.
n <- aggregate(skulls$period, by = period)
## simutanous test: 4 measurements 3 periods.
n <- aggregate(skulls$period, by = period, FUN = sum)
?aggregate
## simutanous test: 4 measurements 3 periods.
n <- aggregate(skulls$period)
## simutanous test: 4 measurements 3 periods.
n <- table(skulls$period)
n
n[1]
S_pool <- fit.manova$SSPE/fit.manova$error.df
S_pool
fit.lm$coefficients
fit.lm$coefficients[2,]
fit.lm$coefficients[2,] - fit.lm$coefficients[3,]
mean_diff_23 <- fit.lm$coefficients[3,]
S_pool_ii <- diag(S_pool)
S_pool
S_pool_ii
sqrt(((1/n[1]) + (1/n[2]))*S_pool_ii)
abs(mean_df_12)
mean_diff_12 <- fit.lm$coefficients[2,] - fit.lm$coefficients[3,]
mean_diff_23 <- fit.lm$coefficients[3,]
abs(mean_df_12)
abs(mean_diff_12)
mean_diff_12 <- fit.lm$coefficients[2,] - fit.lm$coefficients[3,]
mean_diff_12
t_12 <- abs(mean_diff_12)/sqrt(((1/n[1]) + (1/n[2]))*S_pool_ii)
t_12
t_23 <- abs(mean_diff_23)/sqrt(((1/n[2]) + (1/n[3]))*S_pool_ii)
t_23
?pt
alpha <- 0.01
m <- 8
t_thre <- qt(alpha/2*m)
t_thre <- qt(alpha/2*m, df = fit.manova$error.df)
t_thre
t_thre <- qt(1 - alpha/2*m, df = fit.manova$error.df)
t_thre
t_12
t_23
Tstat <- rbind(t_12, t_23)
row.names(Tstat) <- c("12", "23")
Tstat
## simutanous tests: determine changed measurement
C <- matrix(c(0,1,-1, 0, 0, 1), nrow = 2, byrow = T)
test1 <- linearHypothesis(model = fit.lm, hypothesis.matrix = C, P = matrix(c(1,0,0,0), ncol = 1))
test1
test1$P
test1$test
test1 <- linearHypothesis(model = fit.lm, hypothesis.matrix = C)
test1
fit.manova
summary(fit.manova)
## simutanous tests: determine changed measurement
C <- matrix(c(0,1,-1),nrow = 1, byrow = T)
test1 <- linearHypothesis(model = fit.lm, hypothesis.matrix = C)
## test mean vector changes from period 1 to period 2
C12 <- matrix(c(0,1,-1),nrow = 1, byrow = T)
test12 <- linearHypothesis(model = fit.lm, hypothesis.matrix = C12)
test12
## test mean vector changes from period 2 to period 3
C23 <- matrix(c(0,0,1),nrow = 1, byrow = T)
test23 <- linearHypothesis(model = fit.lm, hypothesis.matrix = C23)
test23
## simutanous tests confidence interval: period 1 to period 2
alpha1 <- 0.05
m1 <- 4
margin12 <- qt(1 - alpha1/(2*m1), df = fit.manova$error.df)*sqrt(((1/n[1]) + (1/n[2]))*S_pool_ii)
margin12
conf.int12 <- rbind(mean_diff_12 - margin12, mean_diff_12 + margin_12, row.names = c("lower", "upper"))
margin12 <- qt(1 - alpha1/(2*m1), df = fit.manova$error.df)*sqrt(((1/n[1]) + (1/n[2]))*S_pool_ii)
conf.int12 <- rbind(mean_diff_12 - margin12, mean_diff_12 + margin_12, row.names = c("lower", "upper"))
conf.int12 <- rbind(mean_diff_12 - margin12, mean_diff_12 + margin12, row.names = c("lower", "upper"))
conf.int12
conf.int12 <- rbind(mean_diff_12 - margin12, mean_diff_12 + margin12, )
conf.int12 <- rbind(mean_diff_12 - margin12, mean_diff_12 + margin12) )
conf.int12 <- rbind(mean_diff_12 - margin12, mean_diff_12 + margin12)
conf.int12
## simutanous tests confidence interval: period 2 to period 3
margin23 <- qt(1 - alpha1/(2*m1), df = fit.manova$error.df)*sqrt(((1/n[2]) + (1/n[3]))*S_pool_ii)
conf.int23 <- rbind(mean_diff_23 - margin23, mean_diff_23 + margin23)
conf.int23
m1 <- 8
margin12 <- qt(1 - alpha1/(2*m1), df = fit.manova$error.df)*sqrt(((1/n[1]) + (1/n[2]))*S_pool_ii)
conf.int12 <- rbind(mean_diff_12 - margin12, mean_diff_12 + margin12)
## simutanous tests confidence interval: period 2 to period 3
margin23 <- qt(1 - alpha1/(2*m1), df = fit.manova$error.df)*sqrt(((1/n[2]) + (1/n[3]))*S_pool_ii)
conf.int23 <- rbind(mean_diff_23 - margin23, mean_diff_23 + margin23)
conf.int12
conf.int23
## simutanous tests confidence interval: period 1 to period 2
alpha1 <- 0.01
m1 <- 8
margin12 <- qt(1 - alpha1/(2*m1), df = fit.manova$error.df)*sqrt(((1/n[1]) + (1/n[2]))*S_pool_ii)
conf.int12 <- rbind(mean_diff_12 - margin12, mean_diff_12 + margin12)
## simutanous tests confidence interval: period 2 to period 3
margin23 <- qt(1 - alpha1/(2*m1), df = fit.manova$error.df)*sqrt(((1/n[2]) + (1/n[3]))*S_pool_ii)
conf.int23 <- rbind(mean_diff_23 - margin23, mean_diff_23 + margin23)
conf.int12
conf.int23
t_thre
Tstat
t_thre <- qt(1 - alpha/(2*m), df = fit.manova$error.df)
t_thre
sqrt(((1/n[1]) + (1/n[2]))*S_pool_ii)
(1/n[1]) + (1/n[2])
1/15
test23
mean_diff_23
mean_diff_12
S_pool_ii
sqrt(((1/n[2]) + (1/n[3]))*S_pool_ii)
t_threa
t_thre
Tstat
alpha <- 0.05
m <- 4
t_thre <- qt(1 - alpha/(2*m), df = fit.manova$error.df)
t_thre
alpha <- 0.01
m <- 8
t_thre <- qt(1 - alpha/(2*m), df = fit.manova$error.df)
1 - pt(Tstat, df = fit.manova$error.df)
p.adjust(1 - pt(Tstat, df = fit.manova$error.df), 'bonferroni')
p.adjust(1 - pt(Tstat, df = fit.manova$error.df), 'bonferroni', n = 4)
(1 - pt(Tstat, df = fit.manova$error.df))*8
(1 - pt(Tstat, df = fit.manova$error.df))*4
## simutanous tests confidence interval: period 1 to period 2
alpha1 <- 0.05
m1 <- 4
margin12 <- qt(1 - alpha1/(2*m1), df = fit.manova$error.df)*sqrt(((1/n[1]) + (1/n[2]))*S_pool_ii)
conf.int12 <- rbind(mean_diff_12 - margin12, mean_diff_12 + margin12)
## simutanous tests confidence interval: period 2 to period 3
margin23 <- qt(1 - alpha1/(2*m1), df = fit.manova$error.df)*sqrt(((1/n[2]) + (1/n[3]))*S_pool_ii)
conf.int23 <- rbind(mean_diff_23 - margin23, mean_diff_23 + margin23)
conf.int23
tp_value<-function(X, cl){
class <- levels(cl)
return(t.test(X[cl == class[1]], X[cl == class[2]], var.equal = T)$p.value)
}
p_vals_12 <- sapply(skulls[which(skulls$period == c(1,2)),], tp_value, cl = skulls$period[which(skulls$period == c(1,2))])
skulls$period[which(skulls$period == c(1,2))]
skulls[which(skulls$period == c(1,2)),]
p_vals_12 <- sapply(skulls[which(skulls$period == c(1,2)), -ncol(skulls)], tp_value, cl = skulls$period[which(skulls$period == c(1,2))])
p.adjust(p_vals_12, method = "bonferroni")
p_vals_23 <- sapply(skulls[which(skulls$period == c(2,3)), -ncol(skulls)], tp_value, cl = skulls$period[which(skulls$period == c(2,3))])
tp_value<-function(X, cl){
class <- levels(cl)
class <- droplevels(class)
return(t.test(X[cl == class[1]], X[cl == class[2]], var.equal = T)$p.value)
}
p_vals_23 <- sapply(skulls[which(skulls$period == c(2,3)), -ncol(skulls)], tp_value, cl = skulls$period[which(skulls$period == c(2,3))])
tp_value<-function(X, cl){
cl <- droplevels(cl)
class <- levels(cl)
return(t.test(X[cl == class[1]], X[cl == class[2]], var.equal = T)$p.value)
}
p_vals_23 <- sapply(skulls[which(skulls$period == c(2,3)), -ncol(skulls)], tp_value, cl = skulls$period[which(skulls$period == c(2,3))])
p_val <- rbind(p_vals_12, p_vals_23)
p.adjust(p_vals, method = "bonferroni")
p_vals <- rbind(p_vals_12, p_vals_23)
p.adjust(p_vals, method = "bonferroni")
p_vals <- c(p_vals_12, p_vals_23)
p_val
p_vals
p_vals <- c(p_vals_12, p_vals_23)
p_vals <- c(p_vals_12, p_vals_23)
p_vals
p.adjust(p_vals, method = "bonferroni")
p.adjust(p_vals[order(p_vals)], method = "fdr")
order(p_vals)
2*pt(Tstat, df = fit.manova$error.df, lower.tail = F)
p.adjust(2*pt(Tstat, df = fit.manova$error.df, lower.tail = F), "bonferroni")
p_vals
?t.test
tconf.int<-function(X, cl, conf.level){
cl <- droplevels(cl)
class <- levels(cl)
return(t.test(X[cl == class[1]], X[cl == class[2]], var.equal = T, conf.level = conf.level)$conf.int)
}
p_vals_12 <- sapply(skulls[which(skulls$period == c(1,2)), -ncol(skulls)], tconf.int, cl = skulls$period[which(skulls$period == c(1,2))], conf.level = alpha1/m)
conf.int_12 <- sapply(skulls[which(skulls$period == c(1,2)), -ncol(skulls)], tconf.int, cl = skulls$period[which(skulls$period == c(1,2))], conf.level = alpha1/m)
conf.int_12
alpha1
alpha1/m
m
conf.int_23 <- sapply(skulls[which(skulls$period == c(2,3)), -ncol(skulls)], tconf.int, cl = skulls$period[which(skulls$period == c(2,3))], conf.level = alpha1/m)
conf.int_23
t.test(skulls$`max breadth`[skulls$period == 1],skulls$`max breadth`[skulls$period == 2], conf.level = 0.05/8)
t.test(skulls$`max breadth`[skulls$period == 1],skulls$`max breadth`[skulls$period == 2], conf.level = 0.05/8, var.equal = T)
t.test(skulls$`max breadth`[skulls$period == 1],skulls$`max breadth`[skulls$period == 2], conf.level = 0.95, var.equal = T)
conf.int_23 <- sapply(skulls[which(skulls$period == c(2,3)), -ncol(skulls)], tconf.int, cl = skulls$period[which(skulls$period == c(2,3))], conf.level = 1 - alpha1/m)
conf.int_12 <- sapply(skulls[which(skulls$period == c(1,2)), -ncol(skulls)], tconf.int, cl = skulls$period[which(skulls$period == c(1,2))], conf.level = 1 - alpha1/m)
conf.int_12
conf.int_23
pt(Tstat, df = fit.manova$error.df, lower.tail = F)
2*pt(Tstat, df = fit.manova$error.df, lower.tail = F)*8
tconf.int<-function(X, cl, conf.level){
cl <- droplevels(cl)
class <- levels(cl)
return(t.test(X[cl == class[1]], X[cl == class[2]], conf.level = conf.level)$conf.int)
}
tp_value<-function(X, cl){
cl <- droplevels(cl)
class <- levels(cl)
return(t.test(X[cl == class[1]], X[cl == class[2]])$p.value)
}
p_vals_12 <- sapply(skulls[which(skulls$period == c(1,2)), -ncol(skulls)], tp_value, cl = skulls$period[which(skulls$period == c(1,2))])
p_vals_23 <- sapply(skulls[which(skulls$period == c(2,3)), -ncol(skulls)], tp_value, cl = skulls$period[which(skulls$period == c(2,3))])
p_vals <- c(p_vals_12, p_vals_23)
p.adjust(p_vals, method = "bonferroni")
conf.int_12 <- sapply(skulls[which(skulls$period == c(1,2)), -ncol(skulls)], tconf.int, cl = skulls$period[which(skulls$period == c(1,2))], conf.level = 1 - alpha1/m)
conf.int_23 <- sapply(skulls[which(skulls$period == c(2,3)), -ncol(skulls)], tconf.int, cl = skulls$period[which(skulls$period == c(2,3))], conf.level = 1 - alpha1/m)
conf.int_12
conf.int_23
## simutanous tests confidence interval: period 1 to period 2 ((4 out of 8 simutaneous pairs))
alpha1 <- 0.05
margin12 <- qt(1 - alpha1/(2*m), df = fit.manova$error.df)*sqrt(((1/n[1]) + (1/n[2]))*S_pool_ii)
conf.int12 <- rbind(mean_diff_12 - margin12, mean_diff_12 + margin12)
## simutanous tests confidence interval: period 2 to period 3 (4 out of 8 simutaneous pairs)
margin23 <- qt(1 - alpha1/(2*m), df = fit.manova$error.df)*sqrt(((1/n[2]) + (1/n[3]))*S_pool_ii)
conf.int23 <- rbind(mean_diff_23 - margin23, mean_diff_23 + margin23)
conf.int12
conf.int23
testnormality(X = skulls[skulls$period == 1, -ncol(skulls)])
testnormality(X = skulls[skulls$period == 2, -ncol(skulls)])
testnormality(X = skulls[skulls$period == 3, -ncol(skulls)])
BoxMTest(X = skulls[, -ncol(skulls)], cl = skulls$period)
## test for difference in skull sizes between period 1 and period 3
library(ICSNP)
HotellingsT2(skulls[skulls$period == 1, -ncol(skulls)], skulls[skulls$period == 3, -ncol(skulls)], test = 'f')
T2test <- HotellingsT2(skulls[skulls$period == 1, -ncol(skulls)], skulls[skulls$period == 3, -ncol(skulls)], test = 'f')
T2test$statistic
df1 <- T2test$parameter['df1']
df2 <- T2test$parameter['df2']
T2stat <- T2test$statistic/df2*(df1 + df2 - 1)*df1
T2stat
BoxMTest(X = skulls[which(skulls$period == c(1,3)), -ncol(skulls)], cl = skulls$period[which(skulls$period == c(1,3))])
## one-way MANOVA of skulls
library(car)
fit.lm <- lm(cbind(`max breadth`, `basibregmatic height`, `basialveolar length`, `nasal height`) ~ period, data = skulls, contrasts = list(period = contr.SAS))
fit.manova <- Manova(fit.lm)
summary(fit.manova)
conf.int12
conf.int23
fit.manova$error.df
nrow(skulls)
skulls
## simutanous tests confidence interval: period 1 to period 2 ((4 out of 8 simutaneous pairs))
alpha1 <- 0.05
margin12 <- qt(1 - alpha1/(2*m), df = fit.manova$error.df)*sqrt(((1/n[1]) + (1/n[2]))*S_pool_ii)
conf.int12 <- rbind(mean_diff_12 - margin12, mean_diff_12 + margin12)
## simutanous tests confidence interval: period 2 to period 3 (4 out of 8 simutaneous pairs)
margin23 <- qt(1 - alpha1/(2*m), df = fit.manova$error.df)*sqrt(((1/n[2]) + (1/n[3]))*S_pool_ii)
conf.int23 <- rbind(mean_diff_23 - margin23, mean_diff_23 + margin23)
conf.int12
S_pool
test12
test23
p_vals <- 2*pt(Tstat, df = fit.manova$error.df, lower.tail = F)
p.adjust(p_vals, "bonferroni")
p_vals
p.adjust(p_vals/2, "bonferroni")
## simutanous tests: 4 measurements and 1-2, 2-3 periods. (8 pairs)
n <- table(skulls$period)
S_pool <- fit.manova$SSPE/fit.manova$error.df
mean_diff_12 <- fit.lm$coefficients[2,] - fit.lm$coefficients[3,]
mean_diff_23 <- fit.lm$coefficients[3,]
S_pool_ii <- diag(S_pool)
t_12 <- abs(mean_diff_12)/sqrt(((1/n[1]) + (1/n[2]))*S_pool_ii)
t_23 <- abs(mean_diff_23)/sqrt(((1/n[2]) + (1/n[3]))*S_pool_ii)
Tstat <- rbind(t_12, t_23)
row.names(Tstat) <- c("12", "23")
p_vals <- 2*pt(Tstat, df = fit.manova$error.df, lower.tail = F)
p.adjust(p_vals, "bonferroni")
Tstat
alpha <- 0.01
m <- 8
t_thre <- qt(1 - alpha/(2*m), df = fit.manova$error.df)
t_thre
2*(1 - pt(2.36158390, df = fit.manova$error.df))
2*(1 - pt(2.36158390, df = fit.manova$error.df))*8
conf.int12
conf.int23
mean_diff_12
mean_diff_23
fit.lm$coefficients[2,]
S_pool_ii*87
qt(1 - alpha1/(2*m), df = fit.manova$error.df)
S_pool
