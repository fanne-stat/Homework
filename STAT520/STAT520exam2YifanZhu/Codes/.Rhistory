}
M <- c(500, 1000*1:10, 20000, 50000, 100000, 200000)
for(m in M){
m
}
for(m in M){
print(m)
}
o[,1,1:5]
apply(o[,1,1:5], 2, muiscovered)
apply(o, 2, muiscovered)
apply(o, c(2,3), muiscovered)
apply(o[,,1:5], c(2,3), muiscovered)
apply(apply(o[,,1:5], c(2,3), muiscovered), 2, sum)
apply(apply(o[,,1:5], c(2,3), muiscovered), 1, sum)
apply(apply(o, c(2,3), muiscovered), 1, sum)/M
apply(apply(o, c(2,3), muiscovered), 1, sum)/1000
o[,,1:5]
mucovered <- rep(0, length(M))
lambdacovered <- mucovered
M <- c(500)
M
M <- c(500, 1000)
mucovered <- rep(0, length(M))
lambdacovered <- mucovered
for(i in 1:length(M)){
m <- M[i]
y <- matrix(rinvgauss(n*m, mean = mu, shape = lambda), nrow = n)
ints <- apply(y, 2, intervals)
mucoverrate <- apply(apply(ints[,1,], 2, muiscovered),1, sum)/m
lambdacoverrate <- apply(apply(ints[,2,], 2, lambdaiscovered),1, sum)/m
mucovered[i] <- mucoverrate
lambdacovered[i] <- lambdacoverrate
}
for(i in 1:length(M)){
m <- M[i]
y <- matrix(rinvgauss(n*m, mean = mu, shape = lambda), nrow = n)
ints <- apply(y, 2, intervals)
dim(ints) <- c(2,2,m)
mucoverrate <- apply(apply(ints[,1,], 2, muiscovered),1, sum)/m
lambdacoverrate <- apply(apply(ints[,2,], 2, lambdaiscovered),1, sum)/m
mucovered[i] <- mucoverrate
lambdacovered[i] <- lambdacoverrate
}
ints <- apply(y, 2, intervals)
dim(ints) <- c(2,2,500)
m <- M[1]
y <- matrix(rinvgauss(n*m, mean = mu, shape = lambda), nrow = n)
ints <- apply(y, 2, intervals)
dim(ints) <- c(2,2,m)
mucoverrate <- apply(apply(ints[,1,], 2, muiscovered),1, sum)/m
ints[,1,]
apply(ints[,1,], 2, muiscovered)
for(i in 1:length(M)){
m <- M[i]
y <- matrix(rinvgauss(n*m, mean = mu, shape = lambda), nrow = n)
ints <- apply(y, 2, intervals)
dim(ints) <- c(2,2,m)
mucoverrate <- sum(apply(ints[,1,], 2, muiscovered))/m
lambdacoverrate <- sum(apply(ints[,2,], 2, lambdaiscovered))/m
mucovered[i] <- mucoverrate
lambdacovered[i] <- lambdacoverrate
}
lambdacovered
mucovered
M <- c(500, 1000*1:10, 20000, 50000, 100000, 200000)
mucovered <- rep(0, length(M))
lambdacovered <- mucovered
for(i in 1:length(M)){
m <- M[i]
y <- matrix(rinvgauss(n*m, mean = mu, shape = lambda), nrow = n)
ints <- apply(y, 2, intervals)
dim(ints) <- c(2,2,m)
mucoverrate <- sum(apply(ints[,1,], 2, muiscovered))/m
lambdacoverrate <- sum(apply(ints[,2,], 2, lambdaiscovered))/m
mucovered[i] <- mucoverrate
lambdacovered[i] <- lambdacoverrate
}
lambdacovered
mucovered
d <- data.frame(M = M, mucovered = mucovered, lambdacovered = lambdacovered)
d
?write
write(d, "n=500_lambda=12.txt")
write.table(d, "n=500_lambda=12.txt")
unlink("n=500_lambda=12.txt")
setwd("c:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/")
write.table(d, "n=500_lambda=12.txt")
unlink("n=500_lambda=12.txt")
setwd("c:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/")
setwd("c:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/")
write.table(d, "./n=500_lambda=12.txt")
write.table(d, "./n=500_lambda=12.txt", quote = F)
?round
d <- round(d, digits = 3)
write.table(d, "./n=500_lambda=12.txt", quote = F)
widthmu <- mucovered
widthlambda <- mucovered
M <- c(500, 1000)
mucovered <- rep(0, length(M))
widthmu <- mucovered
lambdacovered <- mucovered
widthlambda <- mucovered
for(i in 1:length(M)){
m <- M[i]
y <- matrix(rinvgauss(n*m, mean = mu, shape = lambda), nrow = n)
ints <- apply(y, 2, intervals)
dim(ints) <- c(2,2,m)
muiscover <- apply(ints[,1,], 2, muiscovered)
mucoverrate <- sum(muiscover)/m
lambdaiscover <- apply(ints[,2,], 2, muiscovered)
lambdacoverrate <- sum(lambdaiscover)/m
mucovered[i] <- mucoverrate
lambdacovered[i] <- lambdacoverrate
widthmu[i] <- sum((muiscover - mucoverrate)^2)/(m*(m-1))
widthlambda[i] <- sum((lambdaiscover - lambdacoverrate)^2)/(m*(m-1))
}
widthmu
widthlambda
mucovered <- rep(0, length(M))
widthmu <- mucovered
lambdacovered <- mucovered
widthlambda <- mucovered
for(i in 1:length(M)){
m <- M[i]
y <- matrix(rinvgauss(n*m, mean = mu, shape = lambda), nrow = n)
ints <- apply(y, 2, intervals)
dim(ints) <- c(2,2,m)
muiscover <- apply(ints[,1,], 2, muiscovered)
mucoverrate <- sum(muiscover)/m
lambdaiscover <- apply(ints[,2,], 2, muiscovered)
lambdacoverrate <- sum(lambdaiscover)/m
mucovered[i] <- mucoverrate
lambdacovered[i] <- lambdacoverrate
widthmu[i] <- 2*1.96*sqrt(sum((muiscover - mucoverrate)^2)/(m*(m-1)))
widthlambda[i] <- 2*1.96*sqrt(sum((lambdaiscover - lambdacoverrate)^2)/(m*(m-1)))
}
widthlambda
widthmu
mucovered <- rep(0, length(M))
widthmu <- mucovered
lambdacovered <- mucovered
widthlambda <- mucovered
for(i in 1:length(M)){
m <- M[i]
y <- matrix(rinvgauss(n*m, mean = mu, shape = lambda), nrow = n)
ints <- apply(y, 2, intervals)
dim(ints) <- c(2,2,m)
muiscover <- apply(ints[,1,], 2, muiscovered)
mucoverrate <- sum(muiscover)/m
lambdaiscover <- apply(ints[,2,], 2, lambdaiscovered)
lambdacoverrate <- sum(lambdaiscover)/m
mucovered[i] <- mucoverrate
lambdacovered[i] <- lambdacoverrate
widthmu[i] <- 2*1.96*sqrt(sum((muiscover - mucoverrate)^2)/(m*(m-1)))
widthlambda[i] <- 2*1.96*sqrt(sum((lambdaiscover - lambdacoverrate)^2)/(m*(m-1)))
}
lambdawaldint()
widthlambda
M <- c(500, 1000*1:10, 20000, 50000, 100000, 200000)
mucovered <- rep(0, length(M))
widthmu <- mucovered
lambdacovered <- mucovered
widthlambda <- mucovered
for(i in 1:length(M)){
m <- M[i]
y <- matrix(rinvgauss(n*m, mean = mu, shape = lambda), nrow = n)
ints <- apply(y, 2, intervals)
dim(ints) <- c(2,2,m)
muiscover <- apply(ints[,1,], 2, muiscovered)
mucoverrate <- sum(muiscover)/m
lambdaiscover <- apply(ints[,2,], 2, lambdaiscovered)
lambdacoverrate <- sum(lambdaiscover)/m
mucovered[i] <- mucoverrate
lambdacovered[i] <- lambdacoverrate
widthmu[i] <- 2*1.96*sqrt(sum((muiscover - mucoverrate)^2)/(m*(m-1)))
widthlambda[i] <- 2*1.96*sqrt(sum((lambdaiscover - lambdacoverrate)^2)/(m*(m-1)))
}
d <- data.frame(M = M, mucovered = mucovered, widthmu = widthmu, lambdacovered = lambdacovered, widthlambda = widthlambda)
d <- round(d, digits = 3)
write.table(d, "./n=500_lambda=12.txt", quote = F)
?write.table
write.table(d, "./n=500_lambda=12.txt", quote = F, col.names = F)
write.table(d, "./n=500_lambda=12.txt", quote = F, row.names = F)
out <- paste("./n=", n, "_lambda=",lambda, ".txt")
out
out <- paste("./n=", n, "_lambda=",lambda, ".txt", sep="")
out
source('C:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/exam 2.R')
source('C:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/exam 2.R')
source('C:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/exam 2.R')
write.table(d, out, quote = F,row.names = F)
source('C:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/exam 2.R')
source('C:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/exam 2.R')
source('C:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/exam 2.R')
?uniroot
qchisq(0.95, df = 1)
qchisq(0.95, df = 1)/2
loglike <- function(mu, lambda, y){
n*log(lambda)/2 - sum(y)*lambda/(2*mu^2) + lambda*n/mu - sum(1/y)*lambda/2
}
mulrt <- function(mu, thetahat, y){
lambdatil <- 1/(sum(y)/(n*mu^2) + sum(1/y)/n - 2/mu)
return(loglike(thetahat[1], thetahat[2], y) - loglike(mu, lambdatil, y) - 1.92)
}
lambdalrt <- function(lambda, thetahat, y){
mutil <- sum(y)/n
return(loglike(thetahat[1], thetahat[2], y) - loglike(mutil, lambda, y) - 1.92)
}
muinvlikint <- function(y, thetahat, muwald){
lower <- uniroot(function(mu) mulrt(mu, y = y, thetahat = thetahat), c(0.01, thetahat[1]))
upper <- uniroot(function(mu) mulrt(mu, y = y, thetahat = thetahat), c(thetahat[1], 10*muwald[2]))
return(c(lower, upper))
}
lambdainvlikint <- function(y, thetahat, lambdawald){
lower <- uniroot(function(lambda) lambdalrt(lambda, y = y, thetahat = thetahat), c(0.01, thetahat[2]))
upper <- uniroot(function(lambda) lambdalrt(lambda, y = y, thetahat = thetahat), c(thetahat[2], 10*lambdawald[2]))
return(c(lower, upper))
}
lambda
mu
y1 <- rinvgauss(n = 50, mean = mu, shape = lambda)
thetahat
thetahat1 <- thetamle(y1)
thetahat1
lambda
y1 <- rinvgauss(n = 50, mean = mu, shape = lambda)
thetahat1
thetahat1 <- thetamle(y1)
thetahat1
n
y1 <- rinvgauss(n = 100, mean = mu, shape = lambda)
thetahat1 <- thetamle(y1)
thetahat1
vthetahat1 <- vthetamle(thetahat1)
vthetahat1
muwald1 <- muwaldint(thetahat1[1], vthetahat1[1])
muwald1
muinvlikint(y, thetahat1, muwald1)
x1 <- seq(0.01, 20, 0.1)
mulrt1 <- function(mu) mulrt(mu, thetahat1, y1)
yx1 <- mulrt1(x1)
plot(x1, yx1)
mulrt1(thetahat1[1])
mulrt1(0.01)
uniroot(mulrt1, c(0.01, thetahat1[1]))
uniroot(mulrt1, c(thetahat1[1], 10*muwald1[2]))
muinvlikint(y, thetahat = thetahat1, muwald = muwald1)
muinvlikint <- function(y, thetahat, muwald){
lower <- uniroot(function(mu) mulrt(mu, thetahat, y), c(0.01, thetahat[1]))
upper <- uniroot(function(mu) mulrt(mu, thetahat, y), c(thetahat[1], 10*muwald[2]))
return(c(lower$root, upper$root))
}
muinvlikint(y, thetahat = thetahat1, muwald = muwald1)
uniroot(function(mu) mulrt(mu, thetahat1, y1), c(0.01, thetahat1[1]))
uniroot(function(mu) mulrt(mu, thetahat1, y1), c(thetahat1[1], 10*muwald1[2]))
muinvlikint(y1, thetahat = thetahat1, muwald = muwald1)
vthetahat1
lamdawald1 <- lambdawaldint(thetahat1[2], vthetahat1[2])
lambdainvlikint(y1, thetahat1, lambdawald1)
lambdainvlikint(y1, thetahat1, lamdawald1)
lambdainvlikint <- function(y, thetahat, lambdawald){
lower <- uniroot(function(lambda) lambdalrt(lambda, y = y, thetahat = thetahat), c(0.01, thetahat[2]))
upper <- uniroot(function(lambda) lambdalrt(lambda, y = y, thetahat = thetahat), c(thetahat[2], 10*lambdawald[2]))
return(c(lower$root, upper$root))
}
lambdainvlikint(y1, thetahat1, lamdawald1)
lamdawald1
dim(y)
lambda
y <- matrix(rinvgauss(n*M, mean = mu, shape = lambda), nrow = n)
rm(y)
y <- matrix(rinvgauss(n*M, mean = mu, shape = lambda), nrow = n)
n = 100
mu = 5
lambda = 4
M = 500
y <- matrix(rinvgauss(n*M, mean = mu, shape = lambda), nrow = n)
intervals <- function(y){
thetahat <- thetamle(y)
vtheta <- vthetamle(thetahat)
muwald <- muwaldint(thetahat[1], vtheta[1])
lambdawald <- lambdawaldint(thetahat[2], vtheta[2])
muinvlik <- muinvlikint(y, thetahat, muwald)
lambdainvlik <- lambdainvlikint(y, thetahat, lambdawald)
return(c(muwald, lambdawald, muinvlik, lambdainvlik))
}
y[,1]
intervals(y[,1])
rm(ints)
ints <- apply(y, 2, intervals)
dim(ints) <- c(2,4,M)
ints[,,1]
bootstatmle <- function(thetahat, M1){
yboot <- matrix(rinvgauss(n*M1, mean = thetahat[1], shape = thetahat[2]))
return(apply(yboot, 2, thetamle))
}
M1 = 2000
thetastar <- bootstatmle(thetahat1, M1)
bootstatmle <- function(thetahat, M1){
yboot <- matrix(rinvgauss(n*M1, mean = thetahat[1], shape = thetahat[2]), nrow = n)
return(apply(yboot, 2, thetamle))
}
thetastar <- bootstatmle(thetahat1, M1)
thetahat1
thetastar[,1:20]
apply(thetastar, 1, function(x) quantile(x, 0.25))
apply(thetastar, 1, function(x) quantile(x, 0.975))
muwald1
muinvlik
lambdawald1
lamdawald1
apply(thetastar, 1, function(x) quantile(x, c(0.25,0.975)))
apply(thetastar, 1, function(x) quantile(x, c(0.025,0.975)))
2*thetahat1 - apply(thetastar, 1, function(x) quantile(x, c(0.025,0.975)))
2*thetahat1 - apply(thetastar, 1, function(x) quantile(x, c(0.025,0.975)))[1,]
2*thetahat1 - apply(thetastar, 1, function(x) quantile(x, c(0.025,0.975)))[2,]
2*thetahat1 + apply(thetastar, 1, function(x) quantile(x, c(0.025,0.975)))[1,]
2*thetahat1 - apply(thetastar, 1, function(x) quantile(x, c(0.025,0.975)))[1,]
bootintmle <- function(thetastar, thetahat){
thetastarlu <- apply(thetastar, 1, function(x) quantile(x, c(0.25,0.975)))
thetal1 <- 2*thetahat - thetastarlu[2,]
thetau1 <- 2*thetahat - thetastarlu[1,]
thetal2 <- thetahat^2/thetastarlu[2,]
thetau2 <- thetahat^2/thetastarlu[1,]
return(matrix(c(thetal1, thetal2, thetau1, thetau2), byrow = T, nrow = 2))
}
bootintmle(thetastar, thetahat1)
lamdawald1
muwald1
bootintmle(thetastar, thetahat1)
bootintmle <- function(thetastar, thetahat){
thetastarlu <- apply(thetastar, 1, function(x) quantile(x, c(0.025,0.975)))
thetal1 <- 2*thetahat - thetastarlu[2,]
thetau1 <- 2*thetahat - thetastarlu[1,]
thetal2 <- thetahat^2/thetastarlu[2,]
thetau2 <- thetahat^2/thetastarlu[1,]
return(matrix(c(thetal1, thetal2, thetau1, thetau2), byrow = T, nrow = 2))
}
bootintmle(thetastar, thetahat1)
vthetastar <- vthetamle(thetastar)
vthetastar
vthetastar
thetastar
vthetastar <- apply(thetastar, 2, vthetamle)
thetastar - thetahat1
ze <- thetastar - thetahat1
ze[1]
ze[,1]
thetastar[,1] - thetahat1
thetastar[,2] - thetahat1
ze[,2]
z <- ze/sqrt(vthetastar)
zlu <- apply(z,1,c(0.025, 0.975))
zlu <- apply(z,1,function(x) quantile(x,c(0.025, 0.975)))
zlu
thetahat1 -sqrt(vthetahat1)*zlu[2,]
thetahat1 -sqrt(vthetahat1)*zlu[1,]
c(c(1,2),zlu)
bootintmle3 <- function(thetastar, thetahat, vthetahat){
vthetastar <- apply(thetastar, 2, vthetamle)
z <- (thetastar - thetahat)/sqrt(vthetastar)
zlu <- apply(z,1,c(0.025, 0.975))
thetal3 <- thetahat -sqrt(vthetahat)*zlu[2,]
thetau3 <- thetahat -sqrt(vthetahat)*zlu[2,]
return(matrix(c(thetal3, thetau3), byrow = T, nrow = 2))
}
bootintmle12 <- function(thetastar, thetahat){
thetastarlu <- apply(thetastar, 1, function(x) quantile(x, c(0.025,0.975)))
thetal1 <- 2*thetahat - thetastarlu[2,]
thetau1 <- 2*thetahat - thetastarlu[1,]
thetal2 <- thetahat^2/thetastarlu[2,]
thetau2 <- thetahat^2/thetastarlu[1,]
return(matrix(c(thetal1, thetal2, thetau1, thetau2), byrow = T, nrow = 2))
}
bootintmle3(thetastar, thetahat1, vthetahat1)
bootintmle3 <- function(thetastar, thetahat, vthetahat){
vthetastar <- apply(thetastar, 2, vthetamle)
z <- (thetastar - thetahat)/sqrt(vthetastar)
zlu <- apply(z,1,function(x) quantile(x,c(0.025, 0.975)))
thetal3 <- thetahat -sqrt(vthetahat)*zlu[2,]
thetau3 <- thetahat -sqrt(vthetahat)*zlu[2,]
return(matrix(c(thetal3, thetau3), byrow = T, nrow = 2))
}
bootintmle3(thetastar, thetahat1, vthetahat1)
bootintmle3 <- function(thetastar, thetahat, vthetahat){
vthetastar <- apply(thetastar, 2, vthetamle)
z <- (thetastar - thetahat)/sqrt(vthetastar)
zlu <- apply(z,1,function(x) quantile(x,c(0.025, 0.975)))
thetal3 <- thetahat -sqrt(vthetahat)*zlu[2,]
thetau3 <- thetahat -sqrt(vthetahat)*zlu[1,]
return(matrix(c(thetal3, thetau3), byrow = T, nrow = 2))
}
bootintmle3(thetastar, thetahat1, vthetahat1)
thetamme <- function(y){
muhat <- sum(y)/n
lambdahat <- 1/(sum(y^2)/(muhat^3*n) - muhat)
return(muhat, lambdahat)
}
thetamme(y1)
thetamme <- function(y){
muhat <- sum(y)/n
lambdahat <- 1/(sum(y^2)/(muhat^3*n) - muhat)
return(c(muhat, lambdahat))
}
thetamme(y1)
thetamme <- function(y){
muhat <- sum(y)/n
lambdahat <- 1/(sum(y^2)/(muhat^3*n) - 1/muhat)
return(c(muhat, lambdahat))
}
thetamme(y1)
bootstatmme <- function(thetahat){
yboot <- matrix(rinvgauss(n*M1, mean = thetahat[1], shape = thetahat[2]), nrow = n)
return(apply(yboot, 2, thetamme))
}
thetahat2 <- thetamme(y1)
thetastarmme <- bootstatmme(thetahat2)
bootintmme(thetastarmme, thetahat2)
bootintmme <- function(thetastar, thetahat){
thetastarlu <- apply(thetastar, 1, function(x) quantile(x, c(0.025,0.975)))
thetal <- 2*thetahat - thetastarlu[2,]
thetau <- 2*thetahat - thetastarlu[1,]
return(matrix(c(thetal, thetau), byrow = T, nrow = 2))
}
bootintmme(thetastarmme, thetahat2)
bootstatmle <- function(thetahat){
yboot <- matrix(rinvgauss(n*M1, mean = thetahat[1], shape = thetahat[2]), nrow = n)
return(apply(yboot, 2, thetamle))
}
bootmmeints <- function(thetahat){
thetastar <- bootstatmme(thetahat)
return(bootintmme(thetastar, thetahat))
}
bootmleints <- function(thetahat, vthetahat){
thetastar <- bootstatmle(thetahat)
return(c(bootintmle12(thetastar, thetahat), bootintmle3(thetastar, thetahat, vthetahat)))
}
o1 <- bootmleints(thetahat1, vthetahat1)
dim(o1) <- c(2,6)
o1
bootmmeints(thetahat2)
rm(o1)
o1 <- intervals(y1)
dim(o1) <- c(2,6)
intervals <- function(y){
thetahat <- thetamle(y)
vtheta <- vthetamle(thetahat)
thetamme <- thetamme(y)
muwald <- muwaldint(thetahat[1], vtheta[1])
lambdawald <- lambdawaldint(thetahat[2], vtheta[2])
muinvlik <- muinvlikint(y, thetahat, muwald)
lambdainvlik <- lambdainvlikint(y, thetahat, lambdawald)
bootmle <- bootmleints(thetahat, vtheta)
bootmme <- bootmmeints(thetamme)
return(c(muwald, lambdawald, muinvlik, lambdainvlik, bootmle, bootmme))
}
o1 <- intervals(y1)
dim(o1) <- c(2,6)
dim(o1) <- c(2,12)
o1
?system.time
rm(list=ls(all = T))
source('C:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/run.R')
2*(1:6)-1
muints <- ints[,2*(1:6)-1,]
muints[,,1:5]
lambdaints <- ints[,2*(1:6),]
lambdaints[,,1:5]
mucoverrate <- apply(apply(muints, c(2,3), muiscovered),1,sum)/M
mucoverrate
lambdacoverrate <- apply(apply(lambdaints, c(2,3), lambdaiscovered),1,sum)/M
lambdacoverrate
muoutp <- apply(apply(muints, c(2,3), isout), 1, sum)/M
muoutp
lambdaoutp <- apply(apply(lambdaints, c(2,3), isout), 1, sum)/M
lambdaoutp
muwidth <- apply(apply(muints, c(2,3), intwidth), 1, median)
muwidth
lambdawidth <- apply(apply(lambdaints, c(2,3), intwidth), 1, median)
lambdawidth
rm(list=ls(all = T))
source('C:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/Codes/chooseN.R')
plot(x = M1, y = widths[1,], xlab = "M1", ylab = "mu_width", 'n')
lines(x = M1, y = widths[1,])
?eps
?postscript
?jpeg
plot(x = M1, y = widths[2,], xlab = "M1", ylab = "mu_width", 'n')
lines(x = M1, y = widths[2,])
out1 <- paste(c("mu_", n, "_", lambda, ".jpg"), sep = "")
out1
out1 <- paste("mu_", n, "_", lambda, ".jpg", sep = "")
out1
out2 <- lambda("lambda_", n, "_", lambda, ".jpg", sep = "")
out2 <- paste("lambda_", n, "_", lambda, ".jpg", sep = "")
out2
jpeg
jpeg(out1, height = 540, width = 650)
plot(x = M1, y = widths[1,], xlab = "M1", ylab = "mu_width", 'n')
lines(x = M1, y = widths[1,])
dev.off()
?jpeg
jpeg(out2, height = 540, width = 650, quality = 100)
plot(x = M1, y = widths[2,], xlab = "M1", ylab = "lambda_width", 'n')
lines(x = M1, y = widths[2,])
dev.off()
source('C:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/Codes/chooseN.R')
source('C:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/Codes/chooseN.R')
source('C:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/Codes/chooseN.R')
source('C:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/Codes/chooseN.R')
source('C:/Users/fanne/Dropbox/Homework/STAT520/STAT520exam2YifanZhu/Codes/chooseN.R')
